---
interface Props {
  title: string;
  description: string;
  tags?: string[];
  imageUrl?: string;
  url: string;
}

const { title, description, tags = [], imageUrl,url } = Astro.props;
---

<a href=`${url}` target="_blank" rel="noopener noreferrer">
  <div
    class="group relative overflow-hidden rounded-lg border border-gray-700 bg-gray-800/50 w-55 h-100 m-2 backdrop-blur-sm transition-all duration-500 hover:border-cyan-400/50"
  >
    <div
      class="absolute inset-0 bg-gradient-to-br from-cyan-500/10 to-blue-600/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300"
    >
    </div>

    {
      imageUrl && (
        <div class="h-40 overflow-hidden p-2">
          <img
            src={imageUrl}
            alt={title}
            class="object-contain w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
            loading="lazy"
          />
        </div>
      )
    }

    <div class="p-6">
      <h3 class="text-xl font-bold text-white mb-2">{title}</h3>
      <p class="text-gray-300 mb-4">{description}</p>

      {
        tags.length > 0 && (
          <div class="flex flex-wrap gap-2">
            {tags.map((tag) => (
              <span class="text-xs text-cyan-400 border border-cyan-400/30 rounded-full px-3 py-1">
                {tag}
              </span>
            ))}
          </div>
        )
      }
    </div>
  </div>
</a>
<style>
  .object-contain {
    object-fit: contain;
  }
</style>
